<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>opwvhk</groupId>
		<artifactId>plugin-loader-example</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>
	<artifactId>plugin-loader-example-user1</artifactId>

	<dependencies>
		<dependency>
			<groupId>opwvhk</groupId>
			<artifactId>plugin-loader-example-api</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<!--
				This is a very crude way of packaging this plugin, but as an example it suffices. For real scenarios, you'd use the assembly
				plugin, creating a zip file with a base directory, containing all dependencies and metadata files.
				-->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-installed</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
									<type>${project.packaging}</type>
								</artifactItem>
							</artifactItems>
							<includeScope>runtime</includeScope>
							<outputDirectory>${project.basedir}/../example/plugins/user1/</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
